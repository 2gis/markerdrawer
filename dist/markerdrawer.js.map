{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///markerdrawer.js","webpack:///webpack/bootstrap 1f546323a598094c1ce6","webpack:///./src/index.ts","webpack:///./src/MarkerDrawer.ts","webpack:///./src/CanvasRenderer.ts","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./src/utils.ts","webpack:///./src/Atlas.ts","webpack:///./node_modules/bin-pack/index.js","webpack:///./node_modules/bin-pack/packer.growing.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__src_MarkerDrawer__","__WEBPACK_IMPORTED_MODULE_1__src_Atlas__","MarkerDrawer","__WEBPACK_IMPORTED_MODULE_0__CanvasRenderer__","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","_super","options","_this","_onClick","ev","point","_getMousePosition","markers","_renderer","search","length","stopPropagation","event_1","originalEvent","marker","Math","max","apply","fire","_onMouseLeave","undefined","_hoveredMarker","event_2","_onMouseMove","event","topMarker","_onMouseDown","_clickedMarker","event_3","_onMouseUp","event_4","debugDrawing","bufferFactor","zIndex","updateOnMoveEnd","setAtlas","atlas","setMarkers","update","addTo","map","addLayer","onAdd","_map","_pane","getPane","onAddToMap","addEventListener","appendChild","container","remove","removeLayer","onRemove","removeChild","onRemoveFromMap","removeEventListener","setDebugDrawing","getContainer","rect","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","L","Layer","CanvasRenderer","__WEBPACK_IMPORTED_MODULE_0_rbush__","__WEBPACK_IMPORTED_MODULE_1__utils__","_isRendering","_isZooming","_needUpdate","_zoom","getZoom","center","getCenter","_origin","lng","lat","_mapSize","pixelOffset","containerPointToLayerPoint","_bufferOffset","round","DomUtil","setPosition","_hiddenFrame","canvas","_render","_onResize","mapSize","getSize","_pixelRatio","min","floor","window","devicePixelRatio","x","_bufferFactor","y","size","_size","_currentFrame","width","height","style","_onZoomStart","clear","_onMoveEnd","_updateOnMoveEnd","_onMoveStart","_stopRendering","_renderLoop","from","_lastRenderedMarker","to","_markersPerFrame","_markers","_renderFinish","startTime","_renderPart","timeDelta","timePerMarker","currentMarkersPerFrame","_timePerFrame","_requestAnimationFrameId","requestAnimationFrame","_markersData","_debugDrawing","_vec","document","createElement","position","_createFrame","_atlas","whenReady","then","markersData","index","on","viewreset","movestart","moveend","zoomstart","resize","off","display","ctx","clearRect","tree","cancelAnimationFrame","minX","minY","maxX","maxY","_switchFrames","pixelRatio","offset","zoom","origin","bufferOffset","image","visibleMarkers","data","sprite","sprites","iconIndex","spriteScale","pixelDensity","anchor","interactiveMargin","push","drawImage","_debugDraw","load","colors","drawingOffsets","j","drawingOffset","beginPath","strokeStyle","stroke","getContext","t","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","findItem","item","items","equalsFn","indexOf","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","Infinity","child","extend","leaf","a","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","multiSelect","arr","right","compare","mid","stack","pop","quickselect","default","all","_all","bbox","result","len","childBBox","nodesToSearch","collides","insert","_build","slice","_splitRoot","tmpNode","_insert","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","log","pow","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","global","quickselectStep","defaultCompare","z","exp","sd","swap","tmp","vec2create","Float64Array","lngLatToZoomPoint","out","lngLat","latLngToMapPoint","mapPointToScreenPoint","scale","PI","R","MAX_LATITUDE","sin","now","performance","bind","Date","Atlas","__WEBPACK_IMPORTED_MODULE_0_bin_pack__","icons","_promise","Promise","icon","_imageLoad","_createSprite","complete","resolve","imageSize","packed","inPlace","shadowColor","shadowBlur","forEach","GrowingPacker","packer","newItems","fit","w","reduce","curr","h","ret","blocks","block","findNode","splitNode","growNode","used","down","canGrowDown","canGrowRight","shouldGrowRight","shouldGrowDown","growRight","growDown"],"mappings":"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","file":"markerdrawer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MarkerDrawer\"] = factory();\n\telse\n\t\troot[\"MarkerDrawer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MarkerDrawer\"] = factory();\n\telse\n\t\troot[\"MarkerDrawer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_MarkerDrawer__ = __webpack_require__(1);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkerDrawer\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_MarkerDrawer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_Atlas__ = __webpack_require__(6);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Atlas\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_Atlas__[\"a\"]; });\n\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MarkerDrawer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__CanvasRenderer__ = __webpack_require__(2);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * This class helps to draw fast a huge amount of markers\n */\nvar MarkerDrawer = /** @class */ (function (_super) {\n    __extends(MarkerDrawer, _super);\n    function MarkerDrawer(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this._onClick = function (ev) {\n            var point = _this._getMousePosition(ev);\n            var markers = _this._renderer.search(point);\n            if (markers.length) {\n                ev.stopPropagation();\n                var event_1 = {\n                    originalEvent: ev,\n                    marker: Math.max.apply(Math, markers),\n                };\n                _this.fire('click', event_1);\n            }\n        };\n        _this._onMouseLeave = function (ev) {\n            if (_this._hoveredMarker !== undefined) {\n                var event_2 = {\n                    originalEvent: ev,\n                    marker: _this._hoveredMarker,\n                };\n                _this.fire('mouseout', event_2);\n                _this._hoveredMarker = undefined;\n            }\n        };\n        _this._onMouseMove = function (ev) {\n            var point = _this._getMousePosition(ev);\n            var markers = _this._renderer.search(point);\n            var event = {\n                originalEvent: ev,\n                marker: 0,\n            };\n            if (markers.length) {\n                var topMarker = Math.max.apply(Math, markers);\n                if (_this._hoveredMarker !== undefined) {\n                    if (_this._hoveredMarker === topMarker) {\n                        return;\n                    }\n                    event.marker = _this._hoveredMarker;\n                    _this.fire('mouseout', event);\n                }\n                _this._hoveredMarker = topMarker;\n                event.marker = _this._hoveredMarker;\n                _this.fire('mouseover', event);\n            }\n            else if (_this._hoveredMarker !== undefined) {\n                event.marker = _this._hoveredMarker;\n                _this.fire('mouseout', event);\n                _this._hoveredMarker = undefined;\n            }\n        };\n        _this._onMouseDown = function (ev) {\n            var point = _this._getMousePosition(ev);\n            var markers = _this._renderer.search(point);\n            if (markers.length) {\n                _this._clickedMarker = Math.max.apply(Math, markers);\n                var event_3 = {\n                    originalEvent: ev,\n                    marker: _this._clickedMarker,\n                };\n                _this.fire('mousedown', event_3);\n            }\n        };\n        _this._onMouseUp = function (ev) {\n            if (_this._clickedMarker !== undefined) {\n                var event_4 = {\n                    originalEvent: ev,\n                    marker: _this._clickedMarker,\n                };\n                _this.fire('mouseup', event_4);\n                _this._clickedMarker = undefined;\n            }\n        };\n        _this._renderer = new __WEBPACK_IMPORTED_MODULE_0__CanvasRenderer__[\"a\" /* CanvasRenderer */](options.debugDrawing || false, options.bufferFactor !== undefined ? options.bufferFactor : 0.5, options.zIndex, options.updateOnMoveEnd);\n        return _this;\n    }\n    MarkerDrawer.prototype.setAtlas = function (atlas) {\n        this._renderer.setAtlas(atlas);\n    };\n    MarkerDrawer.prototype.setMarkers = function (markers) {\n        this._renderer.setMarkers(markers);\n    };\n    MarkerDrawer.prototype.update = function () {\n        this._renderer.update();\n    };\n    MarkerDrawer.prototype.addTo = function (map) {\n        map.addLayer(this);\n        return this;\n    };\n    MarkerDrawer.prototype.onAdd = function () {\n        if (!this._map) {\n            return this;\n        }\n        this._pane = this._map.getPane('overlayPane'); // overlayPane always exist\n        this._renderer.onAddToMap(this._map);\n        this._pane.addEventListener('click', this._onClick);\n        this._pane.addEventListener('mousemove', this._onMouseMove);\n        this._pane.addEventListener('mouseleave', this._onMouseLeave);\n        this._pane.addEventListener('mousedown', this._onMouseDown);\n        this._pane.addEventListener('mouseup', this._onMouseUp);\n        this._pane.appendChild(this._renderer.container);\n        return this;\n    };\n    MarkerDrawer.prototype.remove = function () {\n        if (this._map) {\n            this._map.removeLayer(this);\n        }\n        return this;\n    };\n    MarkerDrawer.prototype.onRemove = function () {\n        this._pane.removeChild(this._renderer.container);\n        this._renderer.onRemoveFromMap();\n        this._pane.removeEventListener('click', this._onClick);\n        this._pane.removeEventListener('mousemove', this._onMouseMove);\n        this._pane.removeEventListener('mouseleave', this._onMouseLeave);\n        this._pane.removeEventListener('mousedown', this._onMouseDown);\n        this._pane.removeEventListener('mouseup', this._onMouseUp);\n        return this;\n    };\n    MarkerDrawer.prototype.setDebugDrawing = function (value) {\n        this._renderer.setDebugDrawing(value);\n    };\n    MarkerDrawer.prototype._getMousePosition = function (ev) {\n        var map = this._map;\n        var container = map.getContainer();\n        var rect = container.getBoundingClientRect();\n        return [\n            ev.clientX - rect.left - container.clientLeft,\n            ev.clientY - rect.top - container.clientTop,\n        ];\n    };\n    return MarkerDrawer;\n}(L.Layer));\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CanvasRenderer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rbush__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rbush___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rbush__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(5);\n\n\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer(debugDrawing, bufferFactor, zIndex, updateOnMoveEnd) {\n        if (updateOnMoveEnd === void 0) { updateOnMoveEnd = true; }\n        var _this = this;\n        this.update = function () {\n            if (!_this._map) {\n                return;\n            }\n            if (_this._isRendering || _this._isZooming) {\n                _this._needUpdate = true;\n                return;\n            }\n            _this._zoom = _this._map.getZoom();\n            var center = _this._map.getCenter();\n            Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* lngLatToZoomPoint */])(_this._origin, [center.lng, center.lat], _this._zoom);\n            _this._origin[0] -= _this._mapSize[0] / 2;\n            _this._origin[1] -= _this._mapSize[1] / 2;\n            var pixelOffset = _this._map.containerPointToLayerPoint([\n                -_this._bufferOffset[0],\n                -_this._bufferOffset[1],\n            ]).round();\n            L.DomUtil.setPosition(_this._hiddenFrame.canvas, pixelOffset);\n            _this._render();\n        };\n        this._onResize = function () {\n            if (!_this._map) {\n                return;\n            }\n            var mapSize = _this._map.getSize();\n            _this._pixelRatio = Math.min(Math.floor(window.devicePixelRatio), 3);\n            _this._bufferOffset = [\n                Math.round(mapSize.x * _this._bufferFactor),\n                Math.round(mapSize.y * _this._bufferFactor),\n            ];\n            var size = _this._size = [\n                mapSize.x + _this._bufferOffset[0] * 2,\n                mapSize.y + _this._bufferOffset[1] * 2,\n            ];\n            _this._mapSize = [\n                mapSize.x,\n                mapSize.y,\n            ];\n            _this._currentFrame.canvas.width = size[0] * _this._pixelRatio;\n            _this._currentFrame.canvas.height = size[1] * _this._pixelRatio;\n            _this._currentFrame.canvas.style.width = size[0] + 'px';\n            _this._currentFrame.canvas.style.height = size[1] + 'px';\n            _this._hiddenFrame.canvas.width = size[0] * _this._pixelRatio;\n            _this._hiddenFrame.canvas.height = size[1] * _this._pixelRatio;\n            _this._hiddenFrame.canvas.style.width = size[0] + 'px';\n            _this._hiddenFrame.canvas.style.height = size[1] + 'px';\n        };\n        this._onZoomStart = function () {\n            _this.clear();\n            _this._isZooming = true;\n        };\n        this._onMoveEnd = function () {\n            _this._isZooming = false;\n            if (_this._updateOnMoveEnd) {\n                _this.update();\n            }\n        };\n        this._onMoveStart = function () {\n            _this._stopRendering();\n        };\n        this._renderLoop = function () {\n            var from = _this._lastRenderedMarker;\n            var to = Math.min(from + _this._markersPerFrame, _this._markers.length);\n            if (from === to) {\n                _this._renderFinish();\n                return;\n            }\n            var startTime = Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* now */])();\n            _this._renderPart(from, to);\n            _this._lastRenderedMarker = to;\n            var timeDelta = Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* now */])() - startTime;\n            var timePerMarker = timeDelta / (to - from);\n            if (timePerMarker !== 0) {\n                var currentMarkersPerFrame = _this._timePerFrame / timePerMarker;\n                _this._markersPerFrame = Math.max(_this._markersPerFrame + Math.floor((currentMarkersPerFrame - _this._markersPerFrame) / 5), 100);\n            }\n            if (to !== _this._markers.length) {\n                _this._requestAnimationFrameId = requestAnimationFrame(_this._renderLoop);\n            }\n            else {\n                _this._renderFinish();\n            }\n        };\n        this._markers = [];\n        this._markersData = [];\n        this._isZooming = false;\n        this._debugDrawing = debugDrawing;\n        this._bufferFactor = bufferFactor;\n        this._updateOnMoveEnd = updateOnMoveEnd;\n        this._markersPerFrame = 500;\n        this._timePerFrame = 10;\n        this._origin = Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* vec2create */])();\n        this._vec = Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* vec2create */])();\n        this._lastRenderedMarker = 0;\n        this._needUpdate = false;\n        this.container = document.createElement('div');\n        if (zIndex) {\n            this.container.style['z-index'] = zIndex;\n        }\n        this.container.style.position = 'absolute';\n        this._currentFrame = this._createFrame();\n        this._hiddenFrame = this._createFrame();\n    }\n    CanvasRenderer.prototype.setAtlas = function (atlas) {\n        var _this = this;\n        if (atlas) {\n            this._atlas = atlas;\n            this._atlas.whenReady()\n                .then(function () {\n                _this.update();\n            });\n        }\n    };\n    CanvasRenderer.prototype.setMarkers = function (markers) {\n        this._needUpdate = false;\n        this._stopRendering();\n        // Set ordered indices\n        if (markers.length > this._markersData.length) {\n            var markersData = [];\n            for (var i = 0; i < markers.length; i++) {\n                markersData[i] = {\n                    index: i,\n                };\n            }\n            this._markersData = markersData;\n        }\n        this._markers = markers;\n        this.update();\n    };\n    CanvasRenderer.prototype.onAddToMap = function (map) {\n        this._map = map;\n        map.on({\n            viewreset: this.update,\n            movestart: this._onMoveStart,\n            moveend: this._onMoveEnd,\n            zoomstart: this._onZoomStart,\n            resize: this._onResize,\n        });\n        this._onResize();\n    };\n    CanvasRenderer.prototype.onRemoveFromMap = function () {\n        if (!this._map) {\n            return;\n        }\n        this._map.off({\n            viewreset: this.update,\n            movestart: this._onMoveStart,\n            moveend: this._onMoveEnd,\n            zoomstart: this._onZoomStart,\n            resize: this._onResize,\n        });\n        this._map = undefined;\n        this._markersData = [];\n        this._markers = [];\n    };\n    CanvasRenderer.prototype.clear = function () {\n        if (!this._map) {\n            return;\n        }\n        this._currentFrame.canvas.style.display = 'none';\n        this._currentFrame.ctx.clearRect(0, 0, this._size[0] * this._pixelRatio, this._size[1] * this._pixelRatio);\n        this._currentFrame.tree.clear();\n        this._needUpdate = false;\n        if (this._isRendering) {\n            cancelAnimationFrame(this._requestAnimationFrameId);\n            this._isRendering = false;\n        }\n    };\n    CanvasRenderer.prototype.search = function (point) {\n        var x = (point[0] + this._bufferOffset[0]) * this._pixelRatio;\n        var y = (point[1] + this._bufferOffset[1]) * this._pixelRatio;\n        var res = this._currentFrame.tree.search({\n            minX: x,\n            minY: y,\n            maxX: x,\n            maxY: y,\n        });\n        return res.map(function (d) { return d.index; });\n    };\n    CanvasRenderer.prototype.setDebugDrawing = function (value) {\n        this._debugDrawing = value;\n    };\n    CanvasRenderer.prototype._stopRendering = function () {\n        if (this._isRendering) {\n            cancelAnimationFrame(this._requestAnimationFrameId);\n            this._isRendering = false;\n        }\n    };\n    CanvasRenderer.prototype._render = function () {\n        if (!this._map) {\n            return;\n        }\n        this._hiddenFrame.tree.clear();\n        this._hiddenFrame.ctx.clearRect(0, 0, this._size[0] * this._pixelRatio, this._size[1] * this._pixelRatio);\n        this._isRendering = true;\n        this._lastRenderedMarker = 0;\n        this._renderLoop();\n    };\n    CanvasRenderer.prototype._renderFinish = function () {\n        this._isRendering = false;\n        this._switchFrames();\n        if (this._needUpdate) {\n            this._needUpdate = false;\n            this.update();\n        }\n    };\n    CanvasRenderer.prototype._renderPart = function (from, to) {\n        var markers = this._markers;\n        var markersData = this._markersData;\n        var atlas = this._atlas;\n        var debugDrawing = this._debugDrawing;\n        var pixelRatio = this._pixelRatio;\n        var size = this._size;\n        var ctx = this._hiddenFrame.ctx;\n        var offset = this._vec;\n        var zoom = this._zoom;\n        var origin = this._origin;\n        var bufferOffset = this._bufferOffset;\n        if (!atlas.image) {\n            return;\n        }\n        this._lastRenderedMarker = to;\n        var visibleMarkers = [];\n        for (var i = from; i < to; i++) {\n            var marker = markers[i];\n            var data = markersData[i];\n            var sprite = atlas.sprites[marker.iconIndex || 0];\n            if (!sprite) {\n                continue;\n            }\n            var spriteScale = pixelRatio / sprite.pixelDensity;\n            Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* lngLatToZoomPoint */])(offset, marker.position, zoom);\n            // Do not change the sequence of rounding, it corresponds to the rounding in Leaflet\n            offset[0] = Math.round(offset[0]);\n            offset[1] = Math.round(offset[1]);\n            offset[0] = Math.round(offset[0] - origin[0]) + bufferOffset[0];\n            offset[1] = Math.round(offset[1] - origin[1]) + bufferOffset[1];\n            offset[0] = Math.round(offset[0] * pixelRatio - sprite.size[0] * spriteScale * sprite.anchor[0]);\n            offset[1] = Math.round(offset[1] * pixelRatio - sprite.size[1] * spriteScale * sprite.anchor[1]);\n            if (offset[0] < 0 || offset[0] + sprite.size[0] * spriteScale > size[0] * pixelRatio ||\n                offset[1] < 0 || offset[1] + sprite.size[1] * spriteScale > size[1] * pixelRatio) {\n                continue;\n            }\n            var interactiveMargin = sprite.interactiveMargin * spriteScale;\n            // Prepare for rbush\n            data.minX = offset[0] - interactiveMargin;\n            data.minY = offset[1] - interactiveMargin;\n            data.maxX = offset[0] + sprite.size[0] * spriteScale + interactiveMargin;\n            data.maxY = offset[1] + sprite.size[1] * spriteScale + interactiveMargin;\n            visibleMarkers.push(data);\n            ctx.drawImage(atlas.image, sprite.position[0], sprite.position[1], sprite.size[0], sprite.size[1], offset[0], offset[1], sprite.size[0] * spriteScale, sprite.size[1] * spriteScale);\n            if (debugDrawing) {\n                this._debugDraw(marker, offset, sprite.size);\n            }\n        }\n        this._hiddenFrame.tree.load(visibleMarkers);\n    };\n    CanvasRenderer.prototype._debugDraw = function (marker, offset, size) {\n        var ctx = this._hiddenFrame.ctx;\n        var colors = [\n            '#000000',\n            '#ff0000',\n            '#00ff00',\n            '#0000ff',\n        ];\n        var drawingOffsets = marker.drawingOffsets;\n        if (!drawingOffsets) {\n            return;\n        }\n        for (var j = 0; j < drawingOffsets.length; j++) {\n            var drawingOffset = drawingOffsets[j];\n            ctx.beginPath();\n            ctx.strokeStyle = colors[j];\n            ctx.rect(offset[0] - drawingOffset, offset[1] - drawingOffset, size[0] + drawingOffset * 2, size[1] + drawingOffset * 2);\n            ctx.stroke();\n        }\n    };\n    CanvasRenderer.prototype._createFrame = function () {\n        var canvas = document.createElement('canvas');\n        canvas.style.display = 'none';\n        // In 2gis-maps a \"position: absolute\" style affects to the canvas\n        // Remove when 2gis-maps update leaflet to 1.0.3\n        canvas.style.position = 'initial';\n        // We do not consider the case when 2d context is not exist\n        var ctx = canvas.getContext('2d');\n        var tree = __WEBPACK_IMPORTED_MODULE_0_rbush__();\n        this.container.appendChild(canvas);\n        return {\n            canvas: canvas,\n            ctx: ctx,\n            tree: tree,\n        };\n    };\n    CanvasRenderer.prototype._switchFrames = function () {\n        if (!this._map) {\n            return;\n        }\n        this._currentFrame.canvas.style.display = 'none';\n        this._hiddenFrame.canvas.style.display = 'block';\n        var t = this._currentFrame;\n        this._currentFrame = this._hiddenFrame;\n        this._hiddenFrame = t;\n    };\n    return CanvasRenderer;\n}());\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = __webpack_require__(4);\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = vec2create;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = lngLatToZoomPoint;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return now; });\nvar R = 6378137;\nvar MAX_LATITUDE = 85.0511287798;\nfunction vec2create() {\n    return new Float64Array(2);\n}\nfunction lngLatToZoomPoint(out, lngLat, zoom) {\n    latLngToMapPoint(out, lngLat);\n    mapPointToScreenPoint(out, out, zoom);\n}\nfunction mapPointToScreenPoint(out, point, zoom) {\n    var scale = 256 * Math.pow(2, zoom);\n    var k = 0.5 / (Math.PI * R);\n    out[0] = scale * (k * point[0] + 0.5);\n    out[1] = scale * (-k * point[1] + 0.5);\n}\nfunction latLngToMapPoint(out, lngLat) {\n    var d = Math.PI / 180;\n    var lat = Math.max(Math.min(MAX_LATITUDE, lngLat[1]), -MAX_LATITUDE);\n    var sin = Math.sin(lat * d);\n    out[0] = R * lngLat[0] * d;\n    out[1] = R * Math.log((1 + sin) / (1 - sin)) / 2;\n}\nvar now = window.performance && window.performance.now\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Atlas; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bin_pack__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bin_pack___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_bin_pack__);\n\n/**\n * The Atlas creates one image from a set of icons.\n * After creating holds information about positions of each icon in the image.\n */\nvar Atlas = /** @class */ (function () {\n    function Atlas(icons) {\n        var _this = this;\n        this.sprites = [];\n        this._promise = Promise.all(icons.map(function (icon) { return _this._imageLoad(icon.image); }))\n            .then(function () { return _this._createSprite(icons); });\n    }\n    /**\n     * Returns a promise that will be resolve after all images loading done\n     */\n    Atlas.prototype.whenReady = function () {\n        return this._promise;\n    };\n    Atlas.prototype._imageLoad = function (image) {\n        if (image.complete) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve) {\n            image.addEventListener('load', resolve);\n        });\n    };\n    Atlas.prototype._createSprite = function (icons) {\n        var margin = 2;\n        var arr = icons.map(function (icon) {\n            var imageSize = [icon.image.width, icon.image.height];\n            var size = icon.size || imageSize;\n            return {\n                // Data for bin-pack\n                width: size[0] + margin * 2,\n                height: size[1] + margin * 2,\n                // Data that we need after bin-pack\n                image: icon.image,\n                anchor: icon.anchor || [0.5, 0.5],\n                size: size,\n                imageSize: imageSize,\n                interactiveMargin: icon.interactiveMargin || 0,\n                pixelDensity: icon.pixelDensity || 1,\n            };\n        });\n        var packed = __WEBPACK_IMPORTED_MODULE_0_bin_pack__(arr, { inPlace: true });\n        this.size = [packed.width, packed.height];\n        // Sum margins that get texture coordinates without margins\n        this.sprites = arr.map(function (icon) { return ({\n            position: [icon.x + margin, icon.y + margin],\n            size: icon.size,\n            anchor: icon.anchor,\n            interactiveMargin: icon.interactiveMargin,\n            pixelDensity: icon.pixelDensity,\n        }); });\n        var canvas = this.image = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        canvas.width = packed.width;\n        canvas.height = packed.height;\n        ctx.shadowColor = 'transparent';\n        ctx.shadowBlur = 0;\n        arr.forEach(function (icon) {\n            ctx.drawImage(icon.image, 0, 0, icon.imageSize[0], icon.imageSize[1], icon.x + margin, icon.y + margin, icon.size[0], icon.size[1]);\n        });\n    };\n    return Atlas;\n}());\n\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar GrowingPacker = __webpack_require__(8);\n\nmodule.exports = function(items, options) {\n\toptions = options || {};\n\tvar packer = new GrowingPacker();\n\tvar inPlace = options.inPlace || false;\n\n\t// Clone the items.\n\tvar newItems = items.map(function(item) { return inPlace ? item : { width: item.width, height: item.height, item: item }; });\n\n\tnewItems = newItems.sort(function(a, b) {\n\t\t// TODO: check that each actually HAS a width and a height.\n\t\t// Sort based on the size (area) of each block.\n\t\treturn (b.width * b.height) - (a.width * a.height);\n\t});\n\n\tpacker.fit(newItems);\n\n\tvar w = newItems.reduce(function(curr, item) { return Math.max(curr, item.x + item.width); }, 0);\n\tvar h = newItems.reduce(function(curr, item) { return Math.max(curr, item.y + item.height); }, 0);\n\n\tvar ret = {\n\t\twidth: w,\n\t\theight: h\n\t};\n\n\tif (!inPlace) {\n\t\tret.items = newItems;\n\t}\n\n\treturn ret;\n};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/\n\nvar GrowingPacker = function() { };\n\nGrowingPacker.prototype = {\n\n\tfit: function(blocks) {\n\t\tvar n, node, block, len = blocks.length, fit;\n\t\tvar width  = len > 0 ? blocks[0].width : 0;\n\t\tvar height = len > 0 ? blocks[0].height : 0;\n\t\tthis.root = { x: 0, y: 0, width: width, height: height };\n\t\tfor (n = 0; n < len ; n++) {\n\t\t\tblock = blocks[n];\n\t\t\tif (node = this.findNode(this.root, block.width, block.height)) {\n\t\t\t\tfit = this.splitNode(node, block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfit = this.growNode(block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tfindNode: function(root, width, height) {\n\t\tif (root.used)\n\t\t\treturn this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n\t\telse if ((width <= root.width) && (height <= root.height))\n\t\t\treturn root;\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tsplitNode: function(node, width, height) {\n\t\tnode.used = true;\n\t\tnode.down  = { x: node.x,         y: node.y + height, width: node.width,         height: node.height - height };\n\t\tnode.right = { x: node.x + width, y: node.y,          width: node.width - width, height: height               };\n\t\treturn node;\n\t},\n\n\tgrowNode: function(width, height) {\n\t\tvar canGrowDown  = (width  <= this.root.width);\n\t\tvar canGrowRight = (height <= this.root.height);\n\n\t\tvar shouldGrowRight = canGrowRight && (this.root.height >= (this.root.width  + width )); // attempt to keep square-ish by growing right when height is much greater than width\n\t\tvar shouldGrowDown  = canGrowDown  && (this.root.width  >= (this.root.height + height)); // attempt to keep square-ish by growing down  when width  is much greater than height\n\n\t\tif (shouldGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (shouldGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse if (canGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (canGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse\n\t\t\treturn null; // need to ensure sensible root starting size to avoid this happening\n\t},\n\n\tgrowRight: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width + width,\n\t\t\theight: this.root.height,\n\t\t\tdown: this.root,\n\t\t\tright: { x: this.root.width, y: 0, width: width, height: this.root.height }\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tgrowDown: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width,\n\t\t\theight: this.root.height + height,\n\t\t\tdown:  { x: 0, y: this.root.height, width: this.root.width, height: height },\n\t\t\tright: this.root\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t}\n\n};\n\nmodule.exports = GrowingPacker;\n\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// markerdrawer.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f546323a598094c1ce6","export { MarkerDrawer } from '../src/MarkerDrawer';\nexport {\n  Atlas,\n  Icon,\n  Sprite,\n} from '../src/Atlas';\nexport { Marker, MarkerDrawerMouseEvent } from './types';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { Atlas } from './Atlas';\nimport { CanvasRenderer } from './CanvasRenderer';\nimport { Marker, Vec2, MarkerDrawerMouseEvent } from './types';\n\nexport interface MarkerDrawerOptions {\n    debugDrawing?: boolean;\n    bufferFactor?: number;\n    zIndex?: number;\n    updateOnMoveEnd?: boolean;\n}\n\n/**\n * This class helps to draw fast a huge amount of markers\n */\nexport class MarkerDrawer extends L.Layer {\n    private _renderer: CanvasRenderer;\n    private _pane: HTMLElement;\n    private _hoveredMarker?: number;\n    private _clickedMarker?: number;\n\n    constructor(options: MarkerDrawerOptions = {}) {\n        super();\n\n        this._renderer = new CanvasRenderer(\n            options.debugDrawing || false,\n            options.bufferFactor !== undefined ? options.bufferFactor : 0.5,\n            options.zIndex,\n            options.updateOnMoveEnd,\n        );\n    }\n\n    public setAtlas(atlas: Atlas) {\n        this._renderer.setAtlas(atlas);\n    }\n\n    public setMarkers(markers: Marker[]) {\n        this._renderer.setMarkers(markers);\n    }\n\n    public update() {\n        this._renderer.update();\n    }\n\n    public addTo(map: L.Map) {\n        map.addLayer(this);\n\n        return this;\n    }\n\n    public onAdd() {\n        if (!this._map) {\n            return this;\n        }\n\n        this._pane = this._map.getPane('overlayPane') as HTMLElement; // overlayPane always exist\n\n        this._renderer.onAddToMap(this._map);\n        this._pane.addEventListener('click', this._onClick);\n        this._pane.addEventListener('mousemove', this._onMouseMove);\n        this._pane.addEventListener('mouseleave', this._onMouseLeave);\n        this._pane.addEventListener('mousedown', this._onMouseDown);\n        this._pane.addEventListener('mouseup', this._onMouseUp);\n        this._pane.appendChild(this._renderer.container);\n\n        return this;\n    }\n\n    public remove() {\n        if (this._map) {\n            this._map.removeLayer(this);\n        }\n\n        return this;\n    }\n\n    public onRemove() {\n        this._pane.removeChild(this._renderer.container);\n        this._renderer.onRemoveFromMap();\n        this._pane.removeEventListener('click', this._onClick);\n        this._pane.removeEventListener('mousemove', this._onMouseMove);\n        this._pane.removeEventListener('mouseleave', this._onMouseLeave);\n        this._pane.removeEventListener('mousedown', this._onMouseDown);\n        this._pane.removeEventListener('mouseup', this._onMouseUp);\n\n        return this;\n    }\n\n    public setDebugDrawing(value: boolean) {\n        this._renderer.setDebugDrawing(value);\n    }\n\n    private _onClick = (ev: MouseEvent) => {\n        const point = this._getMousePosition(ev);\n        const markers = this._renderer.search(point);\n\n        if (markers.length) {\n            ev.stopPropagation();\n            const event: MarkerDrawerMouseEvent = {\n                originalEvent: ev,\n                marker: Math.max(...markers),\n            };\n            this.fire('click', event);\n        }\n    }\n\n    private _onMouseLeave = (ev: MouseEvent) => {\n        if (this._hoveredMarker !== undefined) {\n            const event: MarkerDrawerMouseEvent = {\n                originalEvent: ev,\n                marker: this._hoveredMarker,\n            };\n            this.fire('mouseout', event);\n            this._hoveredMarker = undefined;\n        }\n    }\n\n    private _onMouseMove = (ev: MouseEvent) => {\n        const point = this._getMousePosition(ev);\n        const markers = this._renderer.search(point);\n        const event: MarkerDrawerMouseEvent = {\n            originalEvent: ev,\n            marker: 0,\n        };\n\n        if (markers.length) {\n            const topMarker = Math.max(...markers);\n\n            if (this._hoveredMarker !== undefined) {\n                if (this._hoveredMarker === topMarker) {\n                    return;\n                }\n                event.marker = this._hoveredMarker;\n                this.fire('mouseout', event);\n            }\n            this._hoveredMarker = topMarker;\n            event.marker = this._hoveredMarker;\n            this.fire('mouseover', event);\n        } else if (this._hoveredMarker !== undefined) {\n            event.marker = this._hoveredMarker;\n            this.fire('mouseout', event);\n            this._hoveredMarker = undefined;\n        }\n    }\n\n    private _onMouseDown = (ev: MouseEvent) => {\n        const point = this._getMousePosition(ev);\n        const markers = this._renderer.search(point);\n\n        if (markers.length) {\n            this._clickedMarker = Math.max(...markers);\n            const event: MarkerDrawerMouseEvent = {\n                originalEvent: ev,\n                marker: this._clickedMarker,\n            };\n            this.fire('mousedown', event);\n        }\n    }\n\n    private _onMouseUp = (ev: MouseEvent) => {\n        if (this._clickedMarker !== undefined) {\n            const event: MarkerDrawerMouseEvent = {\n                originalEvent: ev,\n                marker: this._clickedMarker,\n            };\n            this.fire('mouseup', event);\n            this._clickedMarker = undefined;\n        }\n    }\n\n    private _getMousePosition(ev: MouseEvent): Vec2 {\n        const map = this._map as L.Map;\n        const container = map.getContainer();\n        const rect = container.getBoundingClientRect();\n        return [\n            ev.clientX - rect.left - container.clientLeft,\n            ev.clientY - rect.top - container.clientTop,\n        ];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/MarkerDrawer.ts","import { Atlas } from './Atlas';\nimport * as rbush from 'rbush';\nimport {\n    Marker,\n    IRenderer,\n    Vec2,\n} from './types';\n\nimport {\n    lngLatToZoomPoint,\n    vec2create,\n    now,\n} from './utils';\n\ninterface MarkerData {\n    index: number;\n    minX?: number;\n    maxX?: number;\n    minY?: number;\n    maxY?: number;\n}\n\ninterface Frame {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    tree: any;\n}\n\nexport class CanvasRenderer implements IRenderer {\n    public container: HTMLDivElement;\n\n    private _atlas: Atlas;\n\n    private _markers: Marker[];\n    private _markersData: MarkerData[];\n    private _isZooming: boolean;\n\n    private _debugDrawing: boolean;\n\n    private _map: L.Map | undefined;\n    private _size: Vec2;\n    private _mapSize: Vec2;\n    private _zoom: number;\n    private _bufferFactor: number;\n    private _updateOnMoveEnd: boolean;\n    private _bufferOffset: Vec2;\n\n    private _origin: Vec2;\n    private _pixelRatio: number;\n\n    private _currentFrame: Frame;\n    private _hiddenFrame: Frame;\n    private _isRendering: boolean;\n    private _timePerFrame: number;\n    private _markersPerFrame: number;\n    private _lastRenderedMarker: number;\n    private _needUpdate: boolean;\n    private _requestAnimationFrameId: number;\n\n    private _vec: Vec2;\n\n    constructor(debugDrawing: boolean, bufferFactor: number, zIndex?: number, updateOnMoveEnd: boolean = true) {\n        this._markers = [];\n        this._markersData = [];\n        this._isZooming = false;\n        this._debugDrawing = debugDrawing;\n        this._bufferFactor = bufferFactor;\n        this._updateOnMoveEnd = updateOnMoveEnd;\n        this._markersPerFrame = 500;\n        this._timePerFrame = 10;\n        this._origin = vec2create();\n        this._vec = vec2create();\n        this._lastRenderedMarker = 0;\n        this._needUpdate = false;\n\n        this.container = document.createElement('div');\n        if (zIndex) {\n            this.container.style['z-index'] = zIndex;\n        }\n        this.container.style.position = 'absolute';\n        this._currentFrame = this._createFrame();\n        this._hiddenFrame = this._createFrame();\n    }\n\n    public setAtlas(atlas: Atlas) {\n        if (atlas) {\n            this._atlas = atlas;\n            this._atlas.whenReady()\n                .then(() => {\n                    this.update();\n                });\n        }\n    }\n\n    public setMarkers(markers: Marker[]) {\n        this._needUpdate = false;\n\n        this._stopRendering();\n\n        // Set ordered indices\n        if (markers.length > this._markersData.length) {\n            const markersData: MarkerData[] = [];\n            for (let i = 0; i < markers.length; i++) {\n                markersData[i] = {\n                    index: i,\n                };\n            }\n            this._markersData = markersData;\n        }\n\n        this._markers = markers;\n\n        this.update();\n    }\n\n    public onAddToMap(map: L.Map) {\n        this._map = map;\n        map.on({\n            viewreset: this.update,\n            movestart: this._onMoveStart,\n            moveend: this._onMoveEnd,\n            zoomstart: this._onZoomStart,\n            resize: this._onResize,\n        });\n        this._onResize();\n    }\n\n    public onRemoveFromMap() {\n        if (!this._map) {\n            return;\n        }\n\n        this._map.off({\n            viewreset: this.update,\n            movestart: this._onMoveStart,\n            moveend: this._onMoveEnd,\n            zoomstart: this._onZoomStart,\n            resize: this._onResize,\n        });\n\n        this._map = undefined;\n        this._markersData = [];\n        this._markers = [];\n    }\n\n    public clear() {\n        if (!this._map) {\n            return;\n        }\n        this._currentFrame.canvas.style.display = 'none';\n        this._currentFrame.ctx.clearRect(0, 0, this._size[0] * this._pixelRatio, this._size[1] * this._pixelRatio);\n        this._currentFrame.tree.clear();\n        this._needUpdate = false;\n\n        if (this._isRendering) {\n            cancelAnimationFrame(this._requestAnimationFrameId);\n            this._isRendering = false;\n        }\n    }\n\n    public update = () => {\n        if (!this._map) {\n            return;\n        }\n\n        if (this._isRendering || this._isZooming) {\n            this._needUpdate = true;\n            return;\n        }\n\n        this._zoom = this._map.getZoom();\n        const center = this._map.getCenter();\n\n        lngLatToZoomPoint(this._origin, [center.lng, center.lat], this._zoom);\n        this._origin[0] -= this._mapSize[0] / 2;\n        this._origin[1] -= this._mapSize[1] / 2;\n\n        const pixelOffset = this._map.containerPointToLayerPoint([\n            -this._bufferOffset[0],\n            -this._bufferOffset[1],\n        ]).round();\n\n        L.DomUtil.setPosition(this._hiddenFrame.canvas, pixelOffset);\n\n        this._render();\n    }\n\n    public search(point: Vec2) {\n        const x = (point[0] + this._bufferOffset[0]) * this._pixelRatio;\n        const y = (point[1] + this._bufferOffset[1]) * this._pixelRatio;\n        const res: MarkerData[] = this._currentFrame.tree.search({\n            minX: x,\n            minY: y,\n            maxX: x,\n            maxY: y,\n        });\n\n        return res.map((d) => d.index);\n    }\n\n    public setDebugDrawing(value: boolean) {\n        this._debugDrawing = value;\n    }\n\n    private _stopRendering() {\n        if (this._isRendering) {\n            cancelAnimationFrame(this._requestAnimationFrameId);\n            this._isRendering = false;\n        }\n    }\n\n    private _onResize = () => {\n        if (!this._map) {\n            return;\n        }\n\n        const mapSize = this._map.getSize();\n        this._pixelRatio = Math.min(Math.floor(window.devicePixelRatio), 3);\n\n        this._bufferOffset = [\n            Math.round(mapSize.x * this._bufferFactor),\n            Math.round(mapSize.y * this._bufferFactor),\n        ];\n\n        const size = this._size = [\n            mapSize.x + this._bufferOffset[0] * 2,\n            mapSize.y + this._bufferOffset[1] * 2,\n        ];\n\n        this._mapSize = [\n            mapSize.x,\n            mapSize.y,\n        ];\n\n        this._currentFrame.canvas.width = size[0] * this._pixelRatio;\n        this._currentFrame.canvas.height = size[1] * this._pixelRatio;\n        this._currentFrame.canvas.style.width = size[0] + 'px';\n        this._currentFrame.canvas.style.height = size[1] + 'px';\n\n        this._hiddenFrame.canvas.width = size[0] * this._pixelRatio;\n        this._hiddenFrame.canvas.height = size[1] * this._pixelRatio;\n        this._hiddenFrame.canvas.style.width = size[0] + 'px';\n        this._hiddenFrame.canvas.style.height = size[1] + 'px';\n    }\n\n    private _onZoomStart = () => {\n        this.clear();\n        this._isZooming = true;\n    }\n\n    private _onMoveEnd = () => {\n        this._isZooming = false;\n        if (this._updateOnMoveEnd) {\n            this.update();\n        }\n    }\n\n    private _onMoveStart = () => {\n        this._stopRendering();\n    }\n\n    private _render() {\n        if (!this._map) {\n            return;\n        }\n\n        this._hiddenFrame.tree.clear();\n        this._hiddenFrame.ctx.clearRect(0, 0, this._size[0] * this._pixelRatio, this._size[1] * this._pixelRatio);\n\n        this._isRendering = true;\n        this._lastRenderedMarker = 0;\n\n        this._renderLoop();\n    }\n\n    private _renderLoop = () => {\n        const from = this._lastRenderedMarker;\n        const to = Math.min(from + this._markersPerFrame, this._markers.length);\n\n        if (from === to) {\n            this._renderFinish();\n            return;\n        }\n\n        const startTime = now();\n\n        this._renderPart(\n            from,\n            to,\n        );\n\n        this._lastRenderedMarker = to;\n\n        const timeDelta = now() - startTime;\n        const timePerMarker = timeDelta / (to - from);\n        if (timePerMarker !== 0) {\n            const currentMarkersPerFrame = this._timePerFrame / timePerMarker;\n            this._markersPerFrame = Math.max(\n                this._markersPerFrame + Math.floor((currentMarkersPerFrame - this._markersPerFrame) / 5),\n                100,\n            );\n        }\n\n        if (to !== this._markers.length) {\n            this._requestAnimationFrameId = requestAnimationFrame(this._renderLoop);\n        } else {\n            this._renderFinish();\n        }\n    }\n\n    private _renderFinish() {\n        this._isRendering = false;\n        this._switchFrames();\n\n        if (this._needUpdate) {\n            this._needUpdate = false;\n            this.update();\n        }\n    }\n\n    private _renderPart(\n        from: number,\n        to: number,\n    ) {\n        const markers = this._markers;\n        const markersData = this._markersData;\n        const atlas = this._atlas;\n        const debugDrawing = this._debugDrawing;\n        const pixelRatio = this._pixelRatio;\n        const size = this._size;\n        const ctx = this._hiddenFrame.ctx;\n        const offset = this._vec;\n        const zoom = this._zoom;\n        const origin = this._origin;\n        const bufferOffset = this._bufferOffset;\n\n        if (!atlas.image) {\n            return;\n        }\n\n        this._lastRenderedMarker = to;\n\n        const visibleMarkers: MarkerData[] = [];\n\n        for (let i = from; i < to; i++) {\n            const marker = markers[i];\n            const data = markersData[i];\n\n            const sprite = atlas.sprites[marker.iconIndex || 0];\n            if (!sprite) {\n                continue;\n            }\n\n            const spriteScale = pixelRatio / sprite.pixelDensity;\n\n            lngLatToZoomPoint(offset, marker.position, zoom);\n\n            // Do not change the sequence of rounding, it corresponds to the rounding in Leaflet\n            offset[0] = Math.round(offset[0]);\n            offset[1] = Math.round(offset[1]);\n\n            offset[0] = Math.round(offset[0] - origin[0]) + bufferOffset[0];\n            offset[1] = Math.round(offset[1] - origin[1]) + bufferOffset[1];\n\n            offset[0] = Math.round(offset[0] * pixelRatio - sprite.size[0] * spriteScale * sprite.anchor[0]);\n            offset[1] = Math.round(offset[1] * pixelRatio - sprite.size[1] * spriteScale * sprite.anchor[1]);\n\n            if (offset[0] < 0 || offset[0] + sprite.size[0] * spriteScale > size[0] * pixelRatio ||\n                offset[1] < 0 || offset[1] + sprite.size[1] * spriteScale > size[1] * pixelRatio) {\n                continue;\n            }\n\n            const interactiveMargin = sprite.interactiveMargin * spriteScale;\n\n            // Prepare for rbush\n            data.minX = offset[0] - interactiveMargin;\n            data.minY = offset[1] - interactiveMargin;\n            data.maxX = offset[0] + sprite.size[0] * spriteScale + interactiveMargin;\n            data.maxY = offset[1] + sprite.size[1] * spriteScale + interactiveMargin;\n            visibleMarkers.push(data);\n\n            ctx.drawImage(\n                atlas.image,\n                sprite.position[0],\n                sprite.position[1],\n                sprite.size[0],\n                sprite.size[1],\n\n                offset[0],\n                offset[1],\n                sprite.size[0] * spriteScale,\n                sprite.size[1] * spriteScale,\n            );\n\n            if (debugDrawing) {\n                this._debugDraw(marker, offset, sprite.size);\n            }\n        }\n\n        this._hiddenFrame.tree.load(visibleMarkers);\n    }\n\n    private _debugDraw(marker: Marker, offset: Vec2, size: Vec2) {\n        const ctx = this._hiddenFrame.ctx;\n        const colors = [\n            '#000000',\n            '#ff0000',\n            '#00ff00',\n            '#0000ff',\n        ];\n        const drawingOffsets = marker.drawingOffsets;\n        if (!drawingOffsets) {\n            return;\n        }\n\n        for (let j = 0; j < drawingOffsets.length; j++) {\n            const drawingOffset = drawingOffsets[j];\n            ctx.beginPath();\n            ctx.strokeStyle = colors[j];\n            ctx.rect(\n                offset[0] - drawingOffset,\n                offset[1] - drawingOffset,\n                size[0] + drawingOffset * 2,\n                size[1] + drawingOffset * 2,\n            );\n\n            ctx.stroke();\n        }\n    }\n\n    private _createFrame(): Frame {\n        const canvas = document.createElement('canvas');\n        canvas.style.display = 'none';\n\n        // In 2gis-maps a \"position: absolute\" style affects to the canvas\n        // Remove when 2gis-maps update leaflet to 1.0.3\n        canvas.style.position = 'initial';\n\n        // We do not consider the case when 2d context is not exist\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        const tree = rbush();\n\n        this.container.appendChild(canvas);\n\n        return {\n            canvas,\n            ctx,\n            tree,\n        };\n    }\n\n    private _switchFrames() {\n        if (!this._map) {\n            return;\n        }\n\n        this._currentFrame.canvas.style.display = 'none';\n        this._hiddenFrame.canvas.style.display = 'block';\n\n        const t = this._currentFrame;\n        this._currentFrame = this._hiddenFrame;\n        this._hiddenFrame = t;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CanvasRenderer.ts","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rbush/index.js\n// module id = 3\n// module chunks = 0","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/quickselect/quickselect.js\n// module id = 4\n// module chunks = 0","import {\n    LngLat,\n    Vec2,\n} from './types';\n\nconst R = 6378137;\nconst MAX_LATITUDE = 85.0511287798;\nexport function vec2create(): Vec2 {\n    return new Float64Array(2);\n}\n\nexport function lngLatToZoomPoint(out: Vec2, lngLat: LngLat, zoom: number) {\n    latLngToMapPoint(out, lngLat);\n    mapPointToScreenPoint(out, out, zoom);\n}\n\nfunction mapPointToScreenPoint(out: Vec2, point: Vec2, zoom) {\n    const scale = 256 * Math.pow(2, zoom);\n    const k = 0.5 / (Math.PI * R);\n\n    out[0] = scale * (k * point[0] + 0.5);\n    out[1] = scale * (-k * point[1] + 0.5);\n}\n\nfunction latLngToMapPoint(out: Vec2, lngLat: LngLat) {\n    const d = Math.PI / 180;\n    const lat = Math.max(Math.min(MAX_LATITUDE, lngLat[1]), -MAX_LATITUDE);\n    const sin = Math.sin(lat * d);\n\n    out[0] = R * lngLat[0] * d;\n    out[1] = R * Math.log((1 + sin) / (1 - sin)) / 2;\n}\n\nexport const now = window.performance && window.performance.now\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as pack from 'bin-pack';\nimport { Vec2 } from './types';\n\n/**\n * Icon with options for atlas\n */\nexport interface Icon {\n    image: HTMLImageElement;\n    anchor?: Vec2; // [anchor=[0.5, 0.5]]\n    size?: Vec2; // [size=[image.width, image.height]] Size in a final atlas image\n    // Может отличаться от исходного размера изображения.\n    pixelDensity?: number; // Icon pixel density, 1 by default\n    interactiveMargin?: number;\n}\n\nexport interface Sprite {\n    position: Vec2; // Position of icon in the image of atlas\n    size: Vec2; // Size of icon in the atlas\n    anchor: Vec2;\n    pixelDensity: number; // Icon pixel density\n    interactiveMargin: number;\n}\n\n/**\n * The Atlas creates one image from a set of icons.\n * After creating holds information about positions of each icon in the image.\n */\nexport class Atlas {\n    public image?: HTMLCanvasElement; // Image of icons\n    public size: Vec2; // Size of image\n    public sprites: Sprite[]; // Information about each icon\n\n    private _promise: Promise<any>;\n\n    constructor(icons: Icon[]) {\n        this.sprites = [];\n\n        this._promise = Promise.all<any>(icons.map((icon) => this._imageLoad(icon.image)))\n            .then(() => this._createSprite(icons));\n    }\n\n    /**\n     * Returns a promise that will be resolve after all images loading done\n     */\n    public whenReady() {\n        return this._promise;\n    }\n\n    private _imageLoad(image: HTMLImageElement) {\n        if (image.complete) {\n            return Promise.resolve();\n        }\n\n        return new Promise((resolve) => {\n            image.addEventListener('load', resolve);\n        });\n    }\n\n    private _createSprite(icons: Icon[]) {\n        const margin = 2;\n\n        const arr: any = icons.map((icon) => {\n            const imageSize = [icon.image.width, icon.image.height];\n            const size = icon.size || imageSize;\n\n            return {\n                // Data for bin-pack\n                width: size[0] + margin * 2,\n                height: size[1] + margin * 2,\n\n                // Data that we need after bin-pack\n                image: icon.image,\n                anchor: icon.anchor || [0.5, 0.5],\n                size,\n                imageSize,\n                interactiveMargin: icon.interactiveMargin || 0,\n                pixelDensity: icon.pixelDensity || 1,\n            };\n        });\n\n        const packed = pack(arr, { inPlace: true });\n        this.size = [packed.width, packed.height];\n\n        // Sum margins that get texture coordinates without margins\n        this.sprites = arr.map((icon) => ({\n            position: [icon.x + margin, icon.y + margin],\n            size: icon.size,\n            anchor: icon.anchor,\n            interactiveMargin: icon.interactiveMargin,\n            pixelDensity: icon.pixelDensity,\n        }));\n\n        const canvas = this.image = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        if (!ctx) {\n            return;\n        }\n\n        canvas.width = packed.width;\n        canvas.height = packed.height;\n\n        ctx.shadowColor = 'transparent';\n        ctx.shadowBlur = 0;\n\n        arr.forEach((icon) => {\n            ctx.drawImage(icon.image,\n                0, 0, icon.imageSize[0], icon.imageSize[1],\n                icon.x + margin, icon.y + margin, icon.size[0], icon.size[1],\n            );\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Atlas.ts","\"use strict\";\n\nvar GrowingPacker = require('./packer.growing.js');\n\nmodule.exports = function(items, options) {\n\toptions = options || {};\n\tvar packer = new GrowingPacker();\n\tvar inPlace = options.inPlace || false;\n\n\t// Clone the items.\n\tvar newItems = items.map(function(item) { return inPlace ? item : { width: item.width, height: item.height, item: item }; });\n\n\tnewItems = newItems.sort(function(a, b) {\n\t\t// TODO: check that each actually HAS a width and a height.\n\t\t// Sort based on the size (area) of each block.\n\t\treturn (b.width * b.height) - (a.width * a.height);\n\t});\n\n\tpacker.fit(newItems);\n\n\tvar w = newItems.reduce(function(curr, item) { return Math.max(curr, item.x + item.width); }, 0);\n\tvar h = newItems.reduce(function(curr, item) { return Math.max(curr, item.y + item.height); }, 0);\n\n\tvar ret = {\n\t\twidth: w,\n\t\theight: h\n\t};\n\n\tif (!inPlace) {\n\t\tret.items = newItems;\n\t}\n\n\treturn ret;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bin-pack/index.js\n// module id = 7\n// module chunks = 0","/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n\tblocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n\tmarks each block that fits with a .fit attribute pointing to a\n\tnode with .x and .y coordinates\n\nExample:\n-------\n\n\tvar blocks = [\n\t\t{ w: 100, h: 100 },\n\t\t{ w: 100, h: 100 },\n\t\t{ w:  80, h:  80 },\n\t\t{ w:  80, h:  80 },\n\t\tetc\n\t\tetc\n\t];\n\n\tvar packer = new GrowingPacker();\n\tpacker.fit(blocks);\n\n\tfor(var n = 0 ; n < blocks.length ; n++) {\n\t\tvar block = blocks[n];\n\t\tif (block.fit) {\n\t\t\tDraw(block.fit.x, block.fit.y, block.w, block.h);\n\t\t}\n\t}\n\n\n******************************************************************************/\n\nvar GrowingPacker = function() { };\n\nGrowingPacker.prototype = {\n\n\tfit: function(blocks) {\n\t\tvar n, node, block, len = blocks.length, fit;\n\t\tvar width  = len > 0 ? blocks[0].width : 0;\n\t\tvar height = len > 0 ? blocks[0].height : 0;\n\t\tthis.root = { x: 0, y: 0, width: width, height: height };\n\t\tfor (n = 0; n < len ; n++) {\n\t\t\tblock = blocks[n];\n\t\t\tif (node = this.findNode(this.root, block.width, block.height)) {\n\t\t\t\tfit = this.splitNode(node, block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfit = this.growNode(block.width, block.height);\n\t\t\t\tblock.x = fit.x;\n\t\t\t\tblock.y = fit.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tfindNode: function(root, width, height) {\n\t\tif (root.used)\n\t\t\treturn this.findNode(root.right, width, height) || this.findNode(root.down, width, height);\n\t\telse if ((width <= root.width) && (height <= root.height))\n\t\t\treturn root;\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tsplitNode: function(node, width, height) {\n\t\tnode.used = true;\n\t\tnode.down  = { x: node.x,         y: node.y + height, width: node.width,         height: node.height - height };\n\t\tnode.right = { x: node.x + width, y: node.y,          width: node.width - width, height: height               };\n\t\treturn node;\n\t},\n\n\tgrowNode: function(width, height) {\n\t\tvar canGrowDown  = (width  <= this.root.width);\n\t\tvar canGrowRight = (height <= this.root.height);\n\n\t\tvar shouldGrowRight = canGrowRight && (this.root.height >= (this.root.width  + width )); // attempt to keep square-ish by growing right when height is much greater than width\n\t\tvar shouldGrowDown  = canGrowDown  && (this.root.width  >= (this.root.height + height)); // attempt to keep square-ish by growing down  when width  is much greater than height\n\n\t\tif (shouldGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (shouldGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse if (canGrowRight)\n\t\t\treturn this.growRight(width, height);\n\t\telse if (canGrowDown)\n\t\t\treturn this.growDown(width, height);\n\t\telse\n\t\t\treturn null; // need to ensure sensible root starting size to avoid this happening\n\t},\n\n\tgrowRight: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width + width,\n\t\t\theight: this.root.height,\n\t\t\tdown: this.root,\n\t\t\tright: { x: this.root.width, y: 0, width: width, height: this.root.height }\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t},\n\n\tgrowDown: function(width, height) {\n\t\tthis.root = {\n\t\t\tused: true,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.root.width,\n\t\t\theight: this.root.height + height,\n\t\t\tdown:  { x: 0, y: this.root.height, width: this.root.width, height: height },\n\t\t\tright: this.root\n\t\t};\n\t\tvar node;\n\t\tif (node = this.findNode(this.root, width, height))\n\t\t\treturn this.splitNode(node, width, height);\n\t\telse\n\t\t\treturn null;\n\t}\n\n};\n\nmodule.exports = GrowingPacker;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bin-pack/packer.growing.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}